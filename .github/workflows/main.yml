name: Advanced ROM Builder

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  CCACHE_DIR: /home/runner/.ccache
  REPO_DIR: /home/runner/repo

jobs:
  prepare:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure System
        run: |
          sudo timedatectl set-timezone Asia/Tehran
          echo "fs.inotify.max_user_watches=524288" | sudo tee -a /etc/sysctl.conf
          sudo sysctl -p

      - name: Setup Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.ccache
            ~/repo
          key: ${{ runner.os }}-${{ hashFiles('**/Makefile') }}-${{ github.run_number }}

      - name: Swap Management
        run: |
          sudo fallocate -l 8G /swapfile
          sudo chmod 600 /swapfile
          sudo mkswap /swapfile
          sudo swapon /swapfile
          free -h

      - name: Install Essential Packages
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y --no-install-recommends \
            build-essential \
            python3-pip \
            android-sdk-libsparse-utils \
            liblzma-dev \
            zlib1g-dev \
            git \
            wget \
            tar

      - name: Install Build Tools
        run: |
          # نصب mkbootimg از PyPI
          pip3 install mkbootimg
          echo "$HOME/.local/bin" >> $GITHUB_PATH

          # نصب payload-dumper-go
          wget --retry-connrefused --tries=5 https://github.com/ssut/payload-dumper-go/releases/download/v1.2.3/payload-dumper-go_1.2.3_linux_amd64.tar.gz
          tar -xzf payload-dumper-go_1.2.3_linux_amd64.tar.gz
          chmod +x payload-dumper-go
          sudo mv payload-dumper-go /usr/local/bin/

          # تأیید نصب
          mkbootimg --version
          payload-dumper-go --version

  build:
    runs-on: ubuntu-latest
    needs: prepare
    timeout-minutes: 360

    steps:
      - name: Initialize Environment
        run: |
          ccache -M 50G
          ccache -s

      - name: Download Source Code
        run: |
          mkdir -p android_source
          cd android_source
          repo init -u https://github.com/PixelOS-AOSP/platform_manifest.git -b pixel-14.0
          repo sync -c -q -j$(nproc) --force-sync --no-clone-bundle

      - name: Build Preparation
        run: |
          cd android_source
          source build/envsetup.sh
          lunch aosp_chopin-userdebug

      - name: Compile ROM
        run: |
          cd android_source
          make -j$(nproc) 2>&1 | tee build.log
          mkdir -p artifacts
          cp $OUT/*.img artifacts/

      - name: Post-build Actions
        run: |
          ccache -s
          sudo swapoff -a
          sudo rm -f /swapfile
          df -h
          free -h

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: rom-artifacts
          path: |
            android_source/build.log
            android_source/artifacts/*.img
          retention-days: 7

      - name: Notify Status
        if: always()
        uses: actions/github-script@v6
        with:
          script: |
            const status = job.status
            const message = status === 'success' 
              ? '✅ ساخت ROM با موفقیت انجام شد!\nزمان اجرا: ${{ job.steps.*.conclusion }}' 
              : '❌ خطا در فرآیند ساخت!\nکد خطا: ${{ github.run_id }}'
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            })
