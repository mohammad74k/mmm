name: Advanced ROM Builder

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  CCACHE_DIR: /home/runner/.ccache
  REPO_DIR: /home/runner/repo
  SWAP_SIZE: 6G
  CCACHE_SIZE: 40G
  FIRMWARE_URL: "https://bigota.d.miui.com/V14.0.8.0.TMOMIXM/miui_CHOPINGlobal_V14.0.8.0.TMOMIXM_ABCD123456.zip"

jobs:
  prepare:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure System
        run: |
          sudo timedatectl set-timezone Asia/Tehran
          echo "fs.inotify.max_user_watches=524288" | sudo tee -a /etc/sysctl.conf
          sudo sysctl -p

      - name: Setup Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.ccache
            ~/repo
          key: ${{ runner.os }}-ccache-${{ hashFiles('**/Makefile') }}
          restore-keys: ${{ runner.os }}-ccache-

      - name: Swap Management
        run: |
          sudo fallocate -l ${{ env.SWAP_SIZE }} /swapfile
          sudo chmod 600 /swapfile
          sudo mkswap /swapfile
          sudo swapon /swapfile
          free -h

      - name: Install Dependencies
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y --no-install-recommends \
            build-essential git make python3 liblzma-dev \
            zlib1g-dev wget tar libssl-dev ncurses-utils \
            unzip bc bison flex libxml2-utils curl

      - name: Install mkbootimg
        run: |
          git clone https://github.com/chenxiaolong/mkbootimg.git
          cd mkbootimg
          make
          sudo install -Dm755 mkbootimg/mkbootimg /usr/local/bin/
          mkbootimg --version

      - name: Install payload-dumper-go
        run: |
          PAYLOAD_VERSION="1.2.3"
          wget https://github.com/ssut/payload-dumper-go/releases/download/v${PAYLOAD_VERSION}/payload-dumper-go_${PAYLOAD_VERSION}_linux_amd64.tar.gz
          echo "VERIFY_CHECKSUM_HERE" | sha256sum -c -
          tar -xzf payload-dumper-go_${PAYLOAD_VERSION}_linux_amd64.tar.gz
          sudo install -Dm755 payload-dumper-go /usr/local/bin/
          payload-dumper-go --version

  build:
    runs-on: ubuntu-latest
    needs: prepare
    timeout-minutes: 360

    steps:
      - name: Initialize Environment
        run: |
          ccache -M ${{ env.CCACHE_SIZE }}
          ccache -s
          echo "CCACHE_DIR=${{ env.CCACHE_DIR }}" >> $GITHUB_ENV

      - name: Download Android Source
        run: |
          mkdir -p android_source
          cd android_source
          repo init -u https://github.com/PixelOS-AOSP/platform_manifest.git -b pixel-14.0
          repo sync -c -j$(nproc --all) --force-sync --no-clone-bundle

      - name: Download Firmware Package
        run: |
          mkdir -p firmware
          wget -O firmware/miui.zip ${{ env.FIRMWARE_URL }}
          unzip firmware/miui.zip payload.bin -d firmware/

      - name: Extract Vendor Image
        run: |
          mkdir -p extracted_payload
          payload-dumper-go -p vendor -o extracted_payload firmware/payload.bin
          ls -lh extracted_payload/

      - name: Prepare Vendor Files
        run: |
          mkdir -p android_source/device/xiaomi/chopin/vendor
          if [ -f "extracted_payload/vendor.img" ]; then
            cp extracted_payload/vendor.img android_source/device/xiaomi/chopin/vendor/
            echo "✅ Vendor image copied successfully!"
          else
            echo "::error::Vendor image not found! Extracted files:"
            ls extracted_payload/
            exit 1
          fi

      - name: Setup Build Environment
        run: |
          cd android_source
          source build/envsetup.sh
          lunch aosp_chopin-userdebug

      - name: Build ROM
        run: |
          set -eo pipefail
          cd android_source
          make -j$(nproc) 2>&1 | tee build.log
          mkdir -p artifacts
          cp $OUT/*.img artifacts/

      - name: Post-build Cleanup
        run: |
          ccache -s
          sudo swapoff -a
          sudo rm -f /swapfile
          df -h
          free -h

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: rom-artifacts
          path: |
            android_source/build.log
            android_source/artifacts/*.img
          retention-days: 7

      - name: Notify Build Status
        if: always()
        uses: actions/github-script@v6
        with:
          script: |
            const { status } = job
            const duration = (new Date() - new Date(job.started_at)) / 1000
            const message = status === 'success' 
              ? `✅ ساخت ROM با موفقیت انجام شد!\nزمان اجرا: ${Math.floor(duration / 60)} دقیقه` 
              : `❌ خطا در فرآیند ساخت!\nکد خطا: ${context.runId}`
            
            if (context.payload.pull_request) {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: message
              })
            }
