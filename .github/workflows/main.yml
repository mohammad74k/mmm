name: Build ROM

on: push: branches: - main pull_request: branches: - main workflow_dispatch:

jobs: prepare: runs-on: ubuntu-latest timeout-minutes: 240

steps:
  - name: Checkout repository
    uses: actions/checkout@v3

  - name: تنظیم فضای Swap
    run: |
      set -e
      sudo swapoff -a || true
      sudo rm -f /swapfile || true
      if ! swapon -s | grep -q '/swapfile'; then
        sudo fallocate -l 16G /swapfile || sudo dd if=/dev/zero of=/swapfile bs=1M count=16384
        sudo chmod 600 /swapfile
        sudo mkswap /swapfile
        sudo swapon /swapfile
        free -h
      fi

  - name: افزودن مخزن Universe
    run: |
      sudo add-apt-repository -y universe
      sudo apt update

  - name: پاکسازی و بروزرسانی APT
    run: |
      sudo apt clean
      sudo rm -rf /var/lib/apt/lists/*
      for i in {1..3}; do sudo apt update && break || sleep 15; done
      sudo apt upgrade -y || true

  - name: حل مشکلات dpkg
    run: |
      sudo dpkg --configure -a || true
      sudo apt install -f -y || true

  - name: نصب ابزارهای اصلی
    run: |
      set -e
      install_packages() {
        sudo DEBIAN_FRONTEND=noninteractive apt install -y --no-install-recommends \
            openjdk-17-jdk repo git-core gnupg flex bison gperf build-essential \
            zlib1g-dev libc6-dev libncurses5-dev x11proto-core-dev libx11-dev \
            libgl1-mesa-dev libxml2-utils xsltproc unzip python3 python3-pip \
            android-sdk-libsparse-utils wget ccache lz4 liblz4-tool liblzma-dev \
            f2fs-tools squashfs-tools golang-go
      }
      for i in {1..3}; do install_packages && break || sleep 15; done

  - name: نصب mkbootimg
    run: |
      if ! sudo apt install -y android-tools-mkbootimg; then
        curl -LO https://github.com/chenxiaolong/android_device_xiaomi_msm8916-common/raw/master/tools/mkbootimg/mkbootimg
        chmod +x mkbootimg
        sudo mv mkbootimg /usr/local/bin/
      fi

build: runs-on: ubuntu-latest needs: prepare timeout-minutes: 720

steps:
  - name: دانلود و استخراج ROM
    run: |
      mkdir -p custom_rom
      cd custom_rom
      ZIP_FILE="evolution_chopin-ota.zip"
      ZIP_URL="https://mirrors.ilolicon.com/ROM/evolution_chopin-ota.zip"
      
      if [ ! -f "$ZIP_FILE" ] || ! unzip -tq "$ZIP_FILE"; then
        wget --retry-connrefused --waitretry=30 --tries=5 -O "$ZIP_FILE" "$ZIP_URL"
      fi
      unzip -q "$ZIP_FILE"

  - name: استخراج payload.bin
    run: |
      cd custom_rom
      payload_file=$(find . -name "payload.bin" -print -quit)
      
      if ! command -v payload-dumper-go &>/dev/null; then
        go install github.com/ssut/payload-dumper-go@latest
      fi

      mkdir -p extracted_payload
      if [ -f "$payload_file" ]; then
        payload-dumper-go -o extracted_payload "$payload_file"
      else
        echo "❌ فایل payload.bin یافت نشد!"
        exit 1
      fi
      echo "📂 لیست فایل‌های استخراج‌شده از payload.bin:"
      find extracted_payload -type f -ls

  - name: آماده‌سازی vendor.img
    run: |
      cd custom_rom
      echo "📂 لیست فایل‌های موجود در extracted_payload:"
      ls -lh extracted_payload
      
      vendor_img_path=$(find extracted_payload -name "vendor.img" -print -quit)
      
      if [ -f "$vendor_img_path" ]; then
        mkdir -p ../android_source/device/xiaomi/chopin/vendor
        cp "$vendor_img_path" ../android_source/device/xiaomi/chopin/vendor/
        echo "✅ vendor.img با موفقیت کپی شد."
      else
        echo "❌ فایل vendor.img یافت نشد!"
        find extracted_payload -type f -ls
        exit 1
      fi

  - name: دانلود سورس
    run: |
      cd android_source
      repo init -u https://github.com/PixelOS-AOSP/platform_manifest.git -b pixel-14.0
      repo sync -c -j$(nproc) --force-sync --no-clone-bundle --no-tags

  - name: کامپایل ریکاوری
    run: |
      cd android_source
      source build/envsetup.sh
      lunch aosp_chopin-userdebug
      make -j$(nproc) recoveryimage

  - name: کامپایل کامل
    run: |
      cd android_source
      make -j$(nproc)

  - name: بسته‌بندی نتایج
    run: |
      mkdir -p output
      cp android_source/out/target/product/chopin/*.img output/
      echo "✅ ساخت ROM با موفقیت انجام شد!"

